#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.21
#  in conjunction with Tcl version 8.6
#    Mar 14, 2019 12:38:06 PM IST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import second_win_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    second_win_support.set_Tk_var()
    top = second_win_Yes (root)
    second_win_support.init(root, top)
    root.mainloop()

w = None
def create_second_win_Yes(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    second_win_support.set_Tk_var()
    top = second_win_Yes (w)
    second_win_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_second_win_Yes():
    global w
    w.destroy()
    w = None

class second_win_Yes:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("478x321+161+189")
        top.title("Pantry item selection")
        top.configure(relief="raised")
        top.configure(highlightcolor="black")

        self.veggies = tk.LabelFrame(top)
        self.veggies.place(relx=0.105, rely=0.187, relheight=0.234
                , relwidth=0.209)
        self.veggies.configure(relief='groove')
        self.veggies.configure(text='''Veggies''')
        self.veggies.configure(width=100)

        self.egg = tk.Checkbutton(self.veggies)
        self.egg.place(relx=0.1, rely=0.267, relheight=0.267, relwidth=0.49
                , bordermode='ignore')
        self.egg.configure(activebackground="#f9f9f9")
        self.egg.configure(justify='left')
        self.egg.configure(text='''Egg''')
        self.egg.configure(variable=second_win_support.egg)

        self.eggCount = tk.Spinbox(self.veggies, from_=1.0, to=100.0)
        self.eggCount.place(relx=0.6, rely=0.267, relheight=0.267, relwidth=0.28
                , bordermode='ignore')
        self.eggCount.configure(activebackground="#f9f9f9")
        self.eggCount.configure(background="white")
        self.eggCount.configure(highlightbackground="black")
        self.eggCount.configure(selectbackground="#c4c4c4")

        self.chocolates = tk.LabelFrame(top)
        self.chocolates.place(relx=0.356, rely=0.187, relheight=0.234
                , relwidth=0.251)
        self.chocolates.configure(relief='groove')
        self.chocolates.configure(text='''Chocolates''')
        self.chocolates.configure(width=120)

        self.kitkat = tk.Checkbutton(self.chocolates)
        self.kitkat.place(relx=0.083, rely=0.267, relheight=0.267, relwidth=0.5
                , bordermode='ignore')
        self.kitkat.configure(activebackground="#f9f9f9")
        self.kitkat.configure(justify='left')
        self.kitkat.configure(text='''Kitkat''')
        self.kitkat.configure(variable=second_win_support.kitkat)

        self.kitkatCount = tk.Spinbox(self.chocolates, from_=1.0, to=100.0)
        self.kitkatCount.place(relx=0.667, rely=0.267, relheight=0.267
                , relwidth=0.233, bordermode='ignore')
        self.kitkatCount.configure(activebackground="#f9f9f9")
        self.kitkatCount.configure(background="white")
        self.kitkatCount.configure(highlightbackground="black")
        self.kitkatCount.configure(selectbackground="#c4c4c4")

        self.soups = tk.LabelFrame(top)
        self.soups.place(relx=0.628, rely=0.187, relheight=0.265, relwidth=0.335)

        self.soups.configure(relief='groove')
        self.soups.configure(text='''Knorr soups''')
        self.soups.configure(width=160)

        self.veg = tk.Checkbutton(self.soups)
        self.veg.place(relx=0.063, rely=0.235, relheight=0.235, relwidth=0.506
                , bordermode='ignore')
        self.veg.configure(activebackground="#f9f9f9")
        self.veg.configure(justify='left')
        self.veg.configure(text='''Veg soup''')
        self.veg.configure(variable=second_win_support.vegS)

        self.chicken = tk.Checkbutton(self.soups)
        self.chicken.place(relx=0.063, rely=0.588, relheight=0.235
                , relwidth=0.663, bordermode='ignore')
        self.chicken.configure(activebackground="#f9f9f9")
        self.chicken.configure(justify='left')
        self.chicken.configure(text='''Chicken soup''')
        self.chicken.configure(variable=second_win_support.nvegS)

        self.vegSCount = tk.Spinbox(self.soups, from_=1.0, to=100.0)
        self.vegSCount.place(relx=0.75, rely=0.235, relheight=0.235
                , relwidth=0.175, bordermode='ignore')
        self.vegSCount.configure(activebackground="#f9f9f9")
        self.vegSCount.configure(background="white")
        self.vegSCount.configure(highlightbackground="black")
        self.vegSCount.configure(selectbackground="#c4c4c4")

        self.nvegSCount = tk.Spinbox(self.soups, from_=1.0, to=100.0)
        self.nvegSCount.place(relx=0.75, rely=0.588, relheight=0.235
                , relwidth=0.175, bordermode='ignore')
        self.nvegSCount.configure(activebackground="#f9f9f9")
        self.nvegSCount.configure(background="white")
        self.nvegSCount.configure(highlightbackground="black")
        self.nvegSCount.configure(selectbackground="#c4c4c4")

        self.Message1 = tk.Message(top)
        self.Message1.place(relx=0.188, rely=0.0, relheight=0.187
                , relwidth=0.626)
        self.Message1.configure(text='''Choose the pantry items that you want to have!''')
        self.Message1.configure(width=299)

        self.cancelPantry = tk.Button(top)
        self.cancelPantry.place(relx=0.607, rely=0.872, height=28, width=68)
        self.cancelPantry.configure(activebackground="#f9f9f9")
        self.cancelPantry.configure(command=second_win_support.cancel)
        self.cancelPantry.configure(text='''Cancel''')

        self.gotoCount = tk.Button(top)
        self.gotoCount.place(relx=0.774, rely=0.872, height=28, width=75)
        self.gotoCount.configure(activebackground="#f9f9f9")
        self.gotoCount.configure(command=second_win_support.next)
        self.gotoCount.configure(text='''Confirm''')

if __name__ == '__main__':
    vp_start_gui()





